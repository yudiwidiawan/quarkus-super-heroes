quarkus.http.cors=true
quarkus.http.cors.origins=http://localhost:8080
quarkus.http.cors.methods=GET,PUT,POST
quarkus.http.cors.headers=X-Custom
quarkus.http.cors.exposed-headers=Content-Disposition
quarkus.http.cors.access-control-max-age=24H
quarkus.http.cors.access-control-allow-credentials=true
quarkus.http.port=8082
quarkus.hibernate-orm.database.generation=drop-and-create

quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.level=DEBUG

quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5431/fights_database
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=superfight
quarkus.datasource.password=superfight
quarkus.hibernate-orm.sql-load-script=import.sql

%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://host.docker.internal:5437/fights_database
%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.username=superfight
%prod.quarkus.datasource.password=superfight
%prod.quarkus.hibernate-orm.sql-load-script=import.sql


%prod.quarkus.log.console.level=INFO
%prod.quarkus.hibernate-orm.database.generation=update

io.quarkus.workshop.superheroes.fight.client.HeroProxy/mp-rest/url=http://localhost:8083
io.quarkus.workshop.superheroes.fight.client.HeroProxy/mp-rest/scope=javax.inject.Singleton
io.quarkus.workshop.superheroes.fight.client.VillainProxy/mp-rest/url=http://localhost:8084
io.quarkus.workshop.superheroes.fight.client.VillainProxy/mp-rest/scope=javax.inject.Singleton

%prod.io.quarkus.workshop.superheroes.fight.client.HeroProxy/mp-rest/url=http://host.docker.internal:8083
%prod.io.quarkus.workshop.superheroes.fight.client.HeroProxy/mp-rest/scope=javax.inject.Singleton
%prod.io.quarkus.workshop.superheroes.fight.client.VillainProxy/mp-rest/url=http://host.docker.internal:8084
%prod.io.quarkus.workshop.superheroes.fight.client.VillainProxy/mp-rest/scope=javax.inject.Singleton

process.milliseconds=0

mp.messaging.outgoing.fights.connector=smallrye-kafka
mp.messaging.outgoing.fights.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
